/*
  index.css
  
  このCSSファイルは、Reactアプリケーション全体の共通のスタイルを定義するためのものです。
  このファイルには、アプリケーション全体で使用する色、フォント、レイアウトなどの設定が含まれています。

  具体的には、:rootセレクタで定義されるCSSカスタムプロパティ(変数)により、テーマカラーやデフォルトのテキスト色、フォントなどを一元管理しています。
  また、bodyセレクタやaセレクタ、h1セレクタなどを使用して、各種HTML要素のデフォルトのスタイルを定義しています。

  このファイルはアプリケーションのルート（最上位）レベルでインポートされ、そのスタイルはアプリケーション全体に適用されます。
  そのため、ここで設定されたスタイルは、アプリケーションのすべてのコンポーネントで使用されます。
*/

/* 
  html要素に対するスタイルを設定します。
  ここでは基準となるfont-sizeを18pxに設定しています。
  これにより、1remが18pxとなります。
  remは"root em"の略で、html要素のfont-sizeに対する相対的な長さを表します。
*/
html {
  font-size: 18px; /* remの基準値を設定 */
}

/* 
  :root内で共通の変数を定義します。
  CSSカスタムプロパティ(変数)を使用して設定値を一元管理します。
  --theme-color, --text-color, --hover-text-color, --fontは、アプリケーション全体で共有されます。
*/
:root {
  --theme-color: #ee2214; /* テーマカラー */
  --text-color: #424445; /* テキストカラー */
  --hover-text-color: #9e9e9e; /* ホバー時のテキストカラー */
  --font: 'Noto Sans JP', sans-serif; /* フォント */
}

/* 
  body要素に共通のスタイルを適用します。
  ここではテキストの色とフォントを設定しています。
  これにより、アプリケーション全体のデフォルトのテキスト色とフォントが一元管理されます。
*/
body {
  margin: 0;
  color: var(--text-color); /* テキスト色を適用 */
  font-size: 1rem; /* これは18pxと同等です。 */
  font-family: var(--font); /* フォントを適用 */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* 
  h1要素に対するスタイルを設定します。
  ここではfont-sizeを2rem（= 36px）に設定しています。
*/
h1 {
  font-size: 2rem; /* これは36pxと同等です。 */
}

/* 
  p要素に対するスタイルを設定します。
  ここではfont-sizeを0.8rem（= 14.4px）に設定しています。
*/
p {
  font-size: 0.8rem; /* これは14.4pxと同等です。 */
}

/* 
  リンクの色とホバー時の色を設定します。
  a:linkとa:visitedでリンクのデフォルトの色を設定し、
  a:hoverとa:activeでリンクがホバーされた時とクリックされた時の色を設定します。

  注意: 疑似クラスは特定の順番で記述する必要があります。これはルーヴハフ（LoVe/HAte）と呼ばれ、
  :link -> :visited -> :hover -> :active の順で記述します。
*/
a:link,
a:visited {
  color: var(--text-color); /* リンク色をテキストカラーに設定 */
  text-decoration: none; /* リンクの下線を消す（お好みによる） */
}

a:hover,
a:active {
  color: var(--hover-text-color); /* ホバー・アクティブ時の色を設定 */
}

/* 
  特定の要素（ここではcode要素）に対するスタイルを設定します。 
  この部分では、code要素（主にプログラムコードを表示する際に使われる）のフォントを設定しています。
*/
code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
